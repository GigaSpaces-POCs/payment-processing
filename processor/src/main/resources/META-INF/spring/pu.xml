<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:os-core="http://www.openspaces.org/schema/core"
       xmlns:os-events="http://www.openspaces.org/schema/events"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:os-remoting="http://www.openspaces.org/schema/remoting"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
       http://www.openspaces.org/schema/core http://www.openspaces.org/schema/12.0/core/openspaces-core.xsd
       http://www.openspaces.org/schema/events http://www.openspaces.org/schema/12.0/events/openspaces-events.xsd
       http://www.openspaces.org/schema/remoting http://www.openspaces.org/schema/12.0/remoting/openspaces-remoting.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">

    <!--
        Spring property configurer which allows us to use system properties (such as user.name).
    -->
    <bean id="propertiesConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"/>

    <context:component-scan base-package="com.gigaspaces.app.event_processing.processor" />

    <!-- Enables to configure Spring beans through annotations   -->
    <context:annotation-config />

    <!-- Enable @PostPrimary and others annotation support. -->
    <os-core:annotation-support />

    <!-- Enables using @Polling and @Notify annotations to creating polling and notify containers  -->
    <os-events:annotation-support />

    <!-- Enables using @RemotingService and other remoting related annotations   -->
    <os-remoting:annotation-support />

    <!--
        Enables the usage of @GigaSpaceContext annotation based injection.
    -->
    <os-core:giga-space-context/>
 
    <!--
        A bean representing a space (an IJSpace implementation).

        Note, we do not specify here the cluster topology of the space. It is declated outside of
        the processing unit or within the SLA bean.
    -->
    <os-core:space id="space" url="/./myGrid" />
 
    <!--
        Defines a distributed transaction manager.
    -->
     <os-core:distributed-tx-manager id="transactionManager"/>

    <!--
        OpenSpaces simplified space API built on top of IJSpace/JavaSpace.
    -->
    <os-core:giga-space id="gigaSpace" space="space" tx-manager="transactionManager"/>

    <!--
        The data processor bean
    -->
    <bean id="dataProcessor" class="com.gigaspaces.app.event_processing.processor.Processor"/>

    <!--
        A polling event container that performs (by default) polling take operations against
        the space using the provided template (in our case, and the non processed data objects).
        Once a match is found, the data processor bean event listener is triggered using the
        annotation adapter.
    -->
    <!--<os-events:polling-container id="dataProcessorPollingEventContainer" giga-space="gigaSpace">-->
        <!--<os-events:tx-support tx-manager="transactionManager"/>-->
        <!--<os-core:template>-->
            <!--<bean class="com.gigaspaces.app.event_processing.common.Data">-->
                <!--<property name="processed" value="false"/>-->
            <!--</bean>-->
        <!--</os-core:template>-->
        <!--<os-events:listener>-->
            <!--<os-events:annotation-adapter>-->
                <!--<os-events:delegate ref="dataProcessor"/>-->
            <!--</os-events:annotation-adapter>-->
        <!--</os-events:listener>-->
    <!--</os-events:polling-container>-->
</beans>